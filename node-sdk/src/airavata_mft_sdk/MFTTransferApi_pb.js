// source: MFTTransferApi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var CredCommon_pb = require('./CredCommon_pb.js');
goog.object.extend(proto, CredCommon_pb);
var MFTAgentStubs_pb = require('./MFTAgentStubs_pb.js');
goog.object.extend(proto, MFTAgentStubs_pb);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.CallbackEndpoint', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.CallbackEndpoint.CallbackType', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.EndpointPaths', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.RequestCase', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.TransferApiRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.TransferApiResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.TransferRemoveRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.TransferRemoveResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.TransferStateApiRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.TransferStateResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.CallbackEndpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.CallbackEndpoint.displayName = 'proto.org.apache.airavata.mft.api.service.CallbackEndpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.EndpointPaths, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.EndpointPaths.displayName = 'proto.org.apache.airavata.mft.api.service.EndpointPaths';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.airavata.mft.api.service.TransferApiRequest.repeatedFields_, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.TransferApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.TransferApiRequest.displayName = 'proto.org.apache.airavata.mft.api.service.TransferApiRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.TransferApiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.TransferApiResponse.displayName = 'proto.org.apache.airavata.mft.api.service.TransferApiResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.TransferStateApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.displayName = 'proto.org.apache.airavata.mft.api.service.TransferStateApiRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.TransferStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.TransferStateResponse.displayName = 'proto.org.apache.airavata.mft.api.service.TransferStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.repeatedFields_, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.displayName = 'proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.displayName = 'proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.displayName = 'proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.oneofGroups_);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.displayName = 'proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.TransferRemoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.displayName = 'proto.org.apache.airavata.mft.api.service.TransferRemoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.api.service.TransferRemoveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.displayName = 'proto.org.apache.airavata.mft.api.service.TransferRemoveResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.CallbackEndpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endpoint: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint}
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.CallbackEndpoint;
  return proto.org.apache.airavata.mft.api.service.CallbackEndpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint}
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint.CallbackType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.CallbackEndpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.CallbackType = {
  HTTP: 0,
  KAFKA: 1
};

/**
 * optional CallbackType type = 1;
 * @return {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint.CallbackType}
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.prototype.getType = function() {
  return /** @type {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint.CallbackType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint.CallbackType} value
 * @return {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint} returns this
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string endpoint = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint} returns this
 */
proto.org.apache.airavata.mft.api.service.CallbackEndpoint.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.EndpointPaths.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.EndpointPaths} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourcepath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationpath: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.EndpointPaths}
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.EndpointPaths;
  return proto.org.apache.airavata.mft.api.service.EndpointPaths.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.EndpointPaths} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.EndpointPaths}
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcepath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationpath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.EndpointPaths.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.EndpointPaths} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourcepath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationpath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sourcePath = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.prototype.getSourcepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.EndpointPaths} returns this
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.prototype.setSourcepath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destinationPath = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.prototype.getDestinationpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.EndpointPaths} returns this
 */
proto.org.apache.airavata.mft.api.service.EndpointPaths.prototype.setDestinationpath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.repeatedFields_ = [1,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.TransferApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    endpointpathsList: jspb.Message.toObjectList(msg.getEndpointpathsList(),
    proto.org.apache.airavata.mft.api.service.EndpointPaths.toObject, includeInstance),
    sourcestorageid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourcesecretid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    destinationstorageid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    destinationsecretid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    optimizetransferpath: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    targetagentsMap: (f = msg.getTargetagentsMap()) ? f.toObject(includeInstance, undefined) : [],
    mftauthorizationtoken: (f = msg.getMftauthorizationtoken()) && CredCommon_pb.AuthToken.toObject(includeInstance, f),
    callbackendpointsList: jspb.Message.toObjectList(msg.getCallbackendpointsList(),
    proto.org.apache.airavata.mft.api.service.CallbackEndpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.TransferApiRequest;
  return proto.org.apache.airavata.mft.api.service.TransferApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.org.apache.airavata.mft.api.service.EndpointPaths;
      reader.readMessage(value,proto.org.apache.airavata.mft.api.service.EndpointPaths.deserializeBinaryFromReader);
      msg.addEndpointpaths(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcestorageid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcesecretid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationstorageid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationsecretid(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptimizetransferpath(value);
      break;
    case 8:
      var value = msg.getTargetagentsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    case 9:
      var value = new CredCommon_pb.AuthToken;
      reader.readMessage(value,CredCommon_pb.AuthToken.deserializeBinaryFromReader);
      msg.setMftauthorizationtoken(value);
      break;
    case 10:
      var value = new proto.org.apache.airavata.mft.api.service.CallbackEndpoint;
      reader.readMessage(value,proto.org.apache.airavata.mft.api.service.CallbackEndpoint.deserializeBinaryFromReader);
      msg.addCallbackendpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.TransferApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndpointpathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.org.apache.airavata.mft.api.service.EndpointPaths.serializeBinaryToWriter
    );
  }
  f = message.getSourcestorageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSourcesecretid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDestinationstorageid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDestinationsecretid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOptimizetransferpath();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTargetagentsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getMftauthorizationtoken();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      CredCommon_pb.AuthToken.serializeBinaryToWriter
    );
  }
  f = message.getCallbackendpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.org.apache.airavata.mft.api.service.CallbackEndpoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EndpointPaths endpointPaths = 1;
 * @return {!Array<!proto.org.apache.airavata.mft.api.service.EndpointPaths>}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getEndpointpathsList = function() {
  return /** @type{!Array<!proto.org.apache.airavata.mft.api.service.EndpointPaths>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.airavata.mft.api.service.EndpointPaths, 1));
};


/**
 * @param {!Array<!proto.org.apache.airavata.mft.api.service.EndpointPaths>} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
*/
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setEndpointpathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.org.apache.airavata.mft.api.service.EndpointPaths=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.airavata.mft.api.service.EndpointPaths}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.addEndpointpaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.org.apache.airavata.mft.api.service.EndpointPaths, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.clearEndpointpathsList = function() {
  return this.setEndpointpathsList([]);
};


/**
 * optional string sourceStorageId = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getSourcestorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setSourcestorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sourceSecretId = 3;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getSourcesecretid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setSourcesecretid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string destinationStorageId = 5;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getDestinationstorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setDestinationstorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string destinationSecretId = 6;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getDestinationsecretid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setDestinationsecretid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool optimizeTransferPath = 7;
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getOptimizetransferpath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setOptimizetransferpath = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * map<string, int32> targetAgents = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getTargetagentsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.clearTargetagentsMap = function() {
  this.getTargetagentsMap().clear();
  return this;};


/**
 * optional org.apache.airavata.mft.common.AuthToken mftAuthorizationToken = 9;
 * @return {?proto.org.apache.airavata.mft.common.AuthToken}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getMftauthorizationtoken = function() {
  return /** @type{?proto.org.apache.airavata.mft.common.AuthToken} */ (
    jspb.Message.getWrapperField(this, CredCommon_pb.AuthToken, 9));
};


/**
 * @param {?proto.org.apache.airavata.mft.common.AuthToken|undefined} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
*/
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setMftauthorizationtoken = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.clearMftauthorizationtoken = function() {
  return this.setMftauthorizationtoken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.hasMftauthorizationtoken = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated CallbackEndpoint callbackEndpoints = 10;
 * @return {!Array<!proto.org.apache.airavata.mft.api.service.CallbackEndpoint>}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.getCallbackendpointsList = function() {
  return /** @type{!Array<!proto.org.apache.airavata.mft.api.service.CallbackEndpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.airavata.mft.api.service.CallbackEndpoint, 10));
};


/**
 * @param {!Array<!proto.org.apache.airavata.mft.api.service.CallbackEndpoint>} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
*/
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.setCallbackendpointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.airavata.mft.api.service.CallbackEndpoint}
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.addCallbackendpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.org.apache.airavata.mft.api.service.CallbackEndpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiRequest.prototype.clearCallbackendpointsList = function() {
  return this.setCallbackendpointsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.TransferApiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.TransferApiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.TransferApiResponse;
  return proto.org.apache.airavata.mft.api.service.TransferApiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferApiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.TransferApiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferApiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transferId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.prototype.getTransferid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferApiResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferApiResponse.prototype.setTransferid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mftauthorizationtoken: (f = msg.getMftauthorizationtoken()) && CredCommon_pb.AuthToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest}
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.TransferStateApiRequest;
  return proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest}
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferid(value);
      break;
    case 2:
      var value = new CredCommon_pb.AuthToken;
      reader.readMessage(value,CredCommon_pb.AuthToken.deserializeBinaryFromReader);
      msg.setMftauthorizationtoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMftauthorizationtoken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      CredCommon_pb.AuthToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional string transferId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.getTransferid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.setTransferid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional org.apache.airavata.mft.common.AuthToken mftAuthorizationToken = 2;
 * @return {?proto.org.apache.airavata.mft.common.AuthToken}
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.getMftauthorizationtoken = function() {
  return /** @type{?proto.org.apache.airavata.mft.common.AuthToken} */ (
    jspb.Message.getWrapperField(this, CredCommon_pb.AuthToken, 2));
};


/**
 * @param {?proto.org.apache.airavata.mft.common.AuthToken|undefined} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest} returns this
*/
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.setMftauthorizationtoken = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateApiRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.clearMftauthorizationtoken = function() {
  return this.setMftauthorizationtoken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.TransferStateApiRequest.prototype.hasMftauthorizationtoken = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.TransferStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updatetimemils: jspb.Message.getFieldWithDefault(msg, 2, 0),
    percentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.TransferStateResponse;
  return proto.org.apache.airavata.mft.api.service.TransferStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetimemils(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercentage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.TransferStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdatetimemils();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 updateTimeMils = 2;
 * @return {number}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.getUpdatetimemils = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.setUpdatetimemils = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double percentage = 3;
 * @return {number}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.setPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updatetimemils: jspb.Message.getFieldWithDefault(msg, 2, 0),
    percentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    completedList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    failedList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    processingList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    description: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse;
  return proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetimemils(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercentage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCompleted(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addFailed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addProcessing(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdatetimemils();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getCompletedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFailedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getProcessingList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 updateTimeMils = 2;
 * @return {number}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.getUpdatetimemils = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.setUpdatetimemils = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double percentage = 3;
 * @return {number}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.setPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * repeated string completed = 4;
 * @return {!Array<string>}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.getCompletedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.setCompletedList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.addCompleted = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.clearCompletedList = function() {
  return this.setCompletedList([]);
};


/**
 * repeated string failed = 5;
 * @return {!Array<string>}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.getFailedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.setFailedList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.addFailed = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.clearFailedList = function() {
  return this.setFailedList([]);
};


/**
 * repeated string processing = 6;
 * @return {!Array<string>}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.getProcessingList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.setProcessingList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.addProcessing = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.clearProcessingList = function() {
  return this.setProcessingList([]);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferStateSummaryResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    available: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse}
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse;
  return proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse}
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAvailable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool available = 1;
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.ResourceAvailabilityResponse.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcepath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storageid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    secretid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recursivesearch: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest;
  return proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourcepath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretid(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecursivesearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcepath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecretid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecursivesearch();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string resourcePath = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.getResourcepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.setResourcepath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storageId = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string secretId = 3;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.getSecretid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.setSecretid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool recursiveSearch = 4;
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.getRecursivesearch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.prototype.setRecursivesearch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  DIRECTREQUEST: 1,
  IDREQUEST: 2
};

/**
 * @return {proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.RequestCase}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.getRequestCase = function() {
  return /** @type {proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    directrequest: (f = msg.getDirectrequest()) && MFTAgentStubs_pb.GetResourceMetadataRequest.toObject(includeInstance, f),
    idrequest: (f = msg.getIdrequest()) && proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.toObject(includeInstance, f),
    mftauthorizationtoken: (f = msg.getMftauthorizationtoken()) && CredCommon_pb.AuthToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest;
  return proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new MFTAgentStubs_pb.GetResourceMetadataRequest;
      reader.readMessage(value,MFTAgentStubs_pb.GetResourceMetadataRequest.deserializeBinaryFromReader);
      msg.setDirectrequest(value);
      break;
    case 2:
      var value = new proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest;
      reader.readMessage(value,proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.deserializeBinaryFromReader);
      msg.setIdrequest(value);
      break;
    case 3:
      var value = new CredCommon_pb.AuthToken;
      reader.readMessage(value,CredCommon_pb.AuthToken.deserializeBinaryFromReader);
      msg.setMftauthorizationtoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      MFTAgentStubs_pb.GetResourceMetadataRequest.serializeBinaryToWriter
    );
  }
  f = message.getIdrequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest.serializeBinaryToWriter
    );
  }
  f = message.getMftauthorizationtoken();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      CredCommon_pb.AuthToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional org.apache.airavata.mft.agent.stub.GetResourceMetadataRequest directRequest = 1;
 * @return {?proto.org.apache.airavata.mft.agent.stub.GetResourceMetadataRequest}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.getDirectrequest = function() {
  return /** @type{?proto.org.apache.airavata.mft.agent.stub.GetResourceMetadataRequest} */ (
    jspb.Message.getWrapperField(this, MFTAgentStubs_pb.GetResourceMetadataRequest, 1));
};


/**
 * @param {?proto.org.apache.airavata.mft.agent.stub.GetResourceMetadataRequest|undefined} value
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} returns this
*/
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.setDirectrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.clearDirectrequest = function() {
  return this.setDirectrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.hasDirectrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetResourceMetadataFromIDsRequest idRequest = 2;
 * @return {?proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.getIdrequest = function() {
  return /** @type{?proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest} */ (
    jspb.Message.getWrapperField(this, proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest, 2));
};


/**
 * @param {?proto.org.apache.airavata.mft.api.service.GetResourceMetadataFromIDsRequest|undefined} value
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} returns this
*/
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.setIdrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.clearIdrequest = function() {
  return this.setIdrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.hasIdrequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional org.apache.airavata.mft.common.AuthToken mftAuthorizationToken = 3;
 * @return {?proto.org.apache.airavata.mft.common.AuthToken}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.getMftauthorizationtoken = function() {
  return /** @type{?proto.org.apache.airavata.mft.common.AuthToken} */ (
    jspb.Message.getWrapperField(this, CredCommon_pb.AuthToken, 3));
};


/**
 * @param {?proto.org.apache.airavata.mft.common.AuthToken|undefined} value
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} returns this
*/
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.setMftauthorizationtoken = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.clearMftauthorizationtoken = function() {
  return this.setMftauthorizationtoken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.FetchResourceMetadataRequest.prototype.hasMftauthorizationtoken = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.TransferRemoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferRemoveRequest}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.TransferRemoveRequest;
  return proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferRemoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferRemoveRequest}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferRemoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transferId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.prototype.getTransferid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferRemoveRequest} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveRequest.prototype.setTransferid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.api.service.TransferRemoveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferRemoveResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.api.service.TransferRemoveResponse;
  return proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferRemoveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.api.service.TransferRemoveResponse}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.api.service.TransferRemoveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.airavata.mft.api.service.TransferRemoveResponse} returns this
 */
proto.org.apache.airavata.mft.api.service.TransferRemoveResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.org.apache.airavata.mft.api.service);
