/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: odata/ODataSecretService.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ODataCredential";
import * as grpc_1 from "@grpc/grpc-js";
export namespace org.apache.airavata.mft.credential.service.odata {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedODataSecretServiceService {
        static definition = {
            getODataSecret: {
                path: "/org.apache.airavata.mft.credential.service.odata.ODataSecretService/getODataSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretGetRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretGetRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret.deserialize(new Uint8Array(bytes))
            },
            createODataSecret: {
                path: "/org.apache.airavata.mft.credential.service.odata.ODataSecretService/createODataSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretCreateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretCreateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret.deserialize(new Uint8Array(bytes))
            },
            updateODataSecret: {
                path: "/org.apache.airavata.mft.credential.service.odata.ODataSecretService/updateODataSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse.deserialize(new Uint8Array(bytes))
            },
            deleteODataSecret: {
                path: "/org.apache.airavata.mft.credential.service.odata.ODataSecretService/deleteODataSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract getODataSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>): void;
        abstract createODataSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>): void;
        abstract updateODataSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse>): void;
        abstract deleteODataSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse>): void;
    }
    export class ODataSecretServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedODataSecretServiceService.definition, "ODataSecretService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        getODataSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretGetRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>): grpc_1.ClientUnaryCall => {
            return super.getODataSecret(message, metadata, options, callback);
        };
        createODataSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretCreateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecret>): grpc_1.ClientUnaryCall => {
            return super.createODataSecret(message, metadata, options, callback);
        };
        updateODataSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretUpdateResponse>): grpc_1.ClientUnaryCall => {
            return super.updateODataSecret(message, metadata, options, callback);
        };
        deleteODataSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.odata.ODataSecretDeleteResponse>): grpc_1.ClientUnaryCall => {
            return super.deleteODataSecret(message, metadata, options, callback);
        };
    }
}
