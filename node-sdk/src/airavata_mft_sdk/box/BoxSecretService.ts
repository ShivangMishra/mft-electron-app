/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: box/BoxSecretService.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./BoxCredential";
import * as grpc_1 from "@grpc/grpc-js";
export namespace org.apache.airavata.mft.credential.service.box {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedBoxSecretServiceService {
        static definition = {
            getBoxSecret: {
                path: "/org.apache.airavata.mft.credential.service.box.BoxSecretService/getBoxSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretGetRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretGetRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret.deserialize(new Uint8Array(bytes))
            },
            createBoxSecret: {
                path: "/org.apache.airavata.mft.credential.service.box.BoxSecretService/createBoxSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretCreateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretCreateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret.deserialize(new Uint8Array(bytes))
            },
            updateBoxSecret: {
                path: "/org.apache.airavata.mft.credential.service.box.BoxSecretService/updateBoxSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse.deserialize(new Uint8Array(bytes))
            },
            deleteBoxSecret: {
                path: "/org.apache.airavata.mft.credential.service.box.BoxSecretService/deleteBoxSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract getBoxSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>): void;
        abstract createBoxSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>): void;
        abstract updateBoxSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse>): void;
        abstract deleteBoxSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse>): void;
    }
    export class BoxSecretServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedBoxSecretServiceService.definition, "BoxSecretService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        getBoxSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretGetRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>): grpc_1.ClientUnaryCall => {
            return super.getBoxSecret(message, metadata, options, callback);
        };
        createBoxSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretCreateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecret>): grpc_1.ClientUnaryCall => {
            return super.createBoxSecret(message, metadata, options, callback);
        };
        updateBoxSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretUpdateResponse>): grpc_1.ClientUnaryCall => {
            return super.updateBoxSecret(message, metadata, options, callback);
        };
        deleteBoxSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.box.BoxSecretDeleteResponse>): grpc_1.ClientUnaryCall => {
            return super.deleteBoxSecret(message, metadata, options, callback);
        };
    }
}
