/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: box/BoxStorageService.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./BoxStorage";
import * as grpc_1 from "@grpc/grpc-js";
export namespace org.apache.airavata.mft.resource.service.box {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedBoxStorageServiceService {
        static definition = {
            listBoxStorage: {
                path: "/org.apache.airavata.mft.resource.service.box.BoxStorageService/listBoxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse.deserialize(new Uint8Array(bytes))
            },
            getBoxStorage: {
                path: "/org.apache.airavata.mft.resource.service.box.BoxStorageService/getBoxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageGetRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageGetRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage.deserialize(new Uint8Array(bytes))
            },
            createBoxStorage: {
                path: "/org.apache.airavata.mft.resource.service.box.BoxStorageService/createBoxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageCreateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageCreateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage.deserialize(new Uint8Array(bytes))
            },
            updateBoxStorage: {
                path: "/org.apache.airavata.mft.resource.service.box.BoxStorageService/updateBoxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse.deserialize(new Uint8Array(bytes))
            },
            deleteBoxStorage: {
                path: "/org.apache.airavata.mft.resource.service.box.BoxStorageService/deleteBoxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract listBoxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse>): void;
        abstract getBoxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageGetRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>): void;
        abstract createBoxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageCreateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>): void;
        abstract updateBoxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse>): void;
        abstract deleteBoxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse>): void;
    }
    export class BoxStorageServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedBoxStorageServiceService.definition, "BoxStorageService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        listBoxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageListResponse>): grpc_1.ClientUnaryCall => {
            return super.listBoxStorage(message, metadata, options, callback);
        };
        getBoxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageGetRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageGetRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>): grpc_1.ClientUnaryCall => {
            return super.getBoxStorage(message, metadata, options, callback);
        };
        createBoxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageCreateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageCreateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorage>): grpc_1.ClientUnaryCall => {
            return super.createBoxStorage(message, metadata, options, callback);
        };
        updateBoxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageUpdateResponse>): grpc_1.ClientUnaryCall => {
            return super.updateBoxStorage(message, metadata, options, callback);
        };
        deleteBoxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteRequest, dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.box.storage.BoxStorageDeleteResponse>): grpc_1.ClientUnaryCall => {
            return super.deleteBoxStorage(message, metadata, options, callback);
        };
    }
}
