// source: gcs/GCSStorage.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.repeatedFields_, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.displayName = 'proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bucketname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBucketname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bucketName = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.setBucketname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 offset = 1;
 * @return {number}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagesList: jspb.Message.toObjectList(msg.getStoragesList(),
    proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage;
      reader.readMessage(value,proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.deserializeBinaryFromReader);
      msg.addStorages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GCSStorage storages = 1;
 * @return {!Array<!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage>}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.prototype.getStoragesList = function() {
  return /** @type{!Array<!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage, 1));
};


/**
 * @param {!Array<!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage>} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse} returns this
*/
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.prototype.setStoragesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.prototype.addStorages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageListResponse.prototype.clearStoragesList = function() {
  return this.setStoragesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageGetRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storageid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string bucketName = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.setBucketname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storageId = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bucketname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBucketname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bucketName = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.setBucketname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageUpdateResponse.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse;
  return proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.gcs.storage.GCSStorageDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.org.apache.airavata.mft.resource.stubs.gcs.storage);
