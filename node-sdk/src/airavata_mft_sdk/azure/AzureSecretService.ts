/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: azure/AzureSecretService.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./AzureCredential";
import * as grpc_1 from "@grpc/grpc-js";
export namespace org.apache.airavata.mft.credential.service.azure {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedAzureSecretServiceService {
        static definition = {
            getAzureSecret: {
                path: "/org.apache.airavata.mft.credential.service.azure.AzureSecretService/getAzureSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretGetRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretGetRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret.deserialize(new Uint8Array(bytes))
            },
            createAzureSecret: {
                path: "/org.apache.airavata.mft.credential.service.azure.AzureSecretService/createAzureSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretCreateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretCreateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret.deserialize(new Uint8Array(bytes))
            },
            updateAzureSecret: {
                path: "/org.apache.airavata.mft.credential.service.azure.AzureSecretService/updateAzureSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse.deserialize(new Uint8Array(bytes))
            },
            deleteAzureSecret: {
                path: "/org.apache.airavata.mft.credential.service.azure.AzureSecretService/deleteAzureSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract getAzureSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>): void;
        abstract createAzureSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>): void;
        abstract updateAzureSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse>): void;
        abstract deleteAzureSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse>): void;
    }
    export class AzureSecretServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedAzureSecretServiceService.definition, "AzureSecretService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        getAzureSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretGetRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>): grpc_1.ClientUnaryCall => {
            return super.getAzureSecret(message, metadata, options, callback);
        };
        createAzureSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretCreateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecret>): grpc_1.ClientUnaryCall => {
            return super.createAzureSecret(message, metadata, options, callback);
        };
        updateAzureSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretUpdateResponse>): grpc_1.ClientUnaryCall => {
            return super.updateAzureSecret(message, metadata, options, callback);
        };
        deleteAzureSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.azure.AzureSecretDeleteResponse>): grpc_1.ClientUnaryCall => {
            return super.deleteAzureSecret(message, metadata, options, callback);
        };
    }
}
