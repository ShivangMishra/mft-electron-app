/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: azure/AzureStorageService.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./AzureStorage";
import * as grpc_1 from "@grpc/grpc-js";
export namespace org.apache.airavata.mft.resource.service.azure {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedAzureStorageServiceService {
        static definition = {
            listAzureStorage: {
                path: "/org.apache.airavata.mft.resource.service.azure.AzureStorageService/listAzureStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse.deserialize(new Uint8Array(bytes))
            },
            getAzureStorage: {
                path: "/org.apache.airavata.mft.resource.service.azure.AzureStorageService/getAzureStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageGetRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageGetRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage.deserialize(new Uint8Array(bytes))
            },
            createAzureStorage: {
                path: "/org.apache.airavata.mft.resource.service.azure.AzureStorageService/createAzureStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageCreateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageCreateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage.deserialize(new Uint8Array(bytes))
            },
            updateAzureStorage: {
                path: "/org.apache.airavata.mft.resource.service.azure.AzureStorageService/updateAzureStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse.deserialize(new Uint8Array(bytes))
            },
            deleteAzureStorage: {
                path: "/org.apache.airavata.mft.resource.service.azure.AzureStorageService/deleteAzureStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract listAzureStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse>): void;
        abstract getAzureStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageGetRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>): void;
        abstract createAzureStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageCreateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>): void;
        abstract updateAzureStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse>): void;
        abstract deleteAzureStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse>): void;
    }
    export class AzureStorageServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedAzureStorageServiceService.definition, "AzureStorageService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        listAzureStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageListResponse>): grpc_1.ClientUnaryCall => {
            return super.listAzureStorage(message, metadata, options, callback);
        };
        getAzureStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageGetRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageGetRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>): grpc_1.ClientUnaryCall => {
            return super.getAzureStorage(message, metadata, options, callback);
        };
        createAzureStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageCreateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageCreateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorage>): grpc_1.ClientUnaryCall => {
            return super.createAzureStorage(message, metadata, options, callback);
        };
        updateAzureStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageUpdateResponse>): grpc_1.ClientUnaryCall => {
            return super.updateAzureStorage(message, metadata, options, callback);
        };
        deleteAzureStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteRequest, dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.azure.storage.AzureStorageDeleteResponse>): grpc_1.ClientUnaryCall => {
            return super.deleteAzureStorage(message, metadata, options, callback);
        };
    }
}
