/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: swift/SwiftSecretService.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./SwiftCredential";
import * as grpc_1 from "@grpc/grpc-js";
export namespace org.apache.airavata.mft.credential.service.swift {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedSwiftSecretServiceService {
        static definition = {
            getSwiftSecret: {
                path: "/org.apache.airavata.mft.credential.service.swift.SwiftSecretService/getSwiftSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretGetRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretGetRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret.deserialize(new Uint8Array(bytes))
            },
            createSwiftSecret: {
                path: "/org.apache.airavata.mft.credential.service.swift.SwiftSecretService/createSwiftSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretCreateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretCreateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret.deserialize(new Uint8Array(bytes))
            },
            updateSwiftSecret: {
                path: "/org.apache.airavata.mft.credential.service.swift.SwiftSecretService/updateSwiftSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse.deserialize(new Uint8Array(bytes))
            },
            deleteSwiftSecret: {
                path: "/org.apache.airavata.mft.credential.service.swift.SwiftSecretService/deleteSwiftSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract getSwiftSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>): void;
        abstract createSwiftSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>): void;
        abstract updateSwiftSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse>): void;
        abstract deleteSwiftSecret(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse>): void;
    }
    export class SwiftSecretServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedSwiftSecretServiceService.definition, "SwiftSecretService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        getSwiftSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretGetRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretGetRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>): grpc_1.ClientUnaryCall => {
            return super.getSwiftSecret(message, metadata, options, callback);
        };
        createSwiftSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretCreateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretCreateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecret>): grpc_1.ClientUnaryCall => {
            return super.createSwiftSecret(message, metadata, options, callback);
        };
        updateSwiftSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretUpdateResponse>): grpc_1.ClientUnaryCall => {
            return super.updateSwiftSecret(message, metadata, options, callback);
        };
        deleteSwiftSecret: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteRequest, dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse> = (message: dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.credential.stubs.swift.SwiftSecretDeleteResponse>): grpc_1.ClientUnaryCall => {
            return super.deleteSwiftSecret(message, metadata, options, callback);
        };
    }
}
