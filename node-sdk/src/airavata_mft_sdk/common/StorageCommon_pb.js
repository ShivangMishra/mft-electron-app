// source: common/StorageCommon.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.Error', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.SearchqueryCase', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest', null, global);
goog.exportSymbol('proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.repeatedFields_, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_);
};
goog.inherits(proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.displayName = 'proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storagename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storagetype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    error: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoragename(value);
      break;
    case 3:
      var value = /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (reader.readEnum());
      msg.setStoragetype(value);
      break;
    case 4:
      var value = /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error} */ (reader.readEnum());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoragename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoragetype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storageName = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.getStoragename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.setStoragename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StorageType storageType = 3;
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.getStoragetype = function() {
  return /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.setStoragetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Error error = 4;
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.getError = function() {
  return /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageTypeResolveResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secretid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storagetype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    error: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretid(value);
      break;
    case 3:
      var value = /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (reader.readEnum());
      msg.setStoragetype(value);
      break;
    case 4:
      var value = /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error} */ (reader.readEnum());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecretid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoragetype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secretId = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.getSecretid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.setSecretid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StorageType storageType = 3;
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.getStoragetype = function() {
  return /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.setStoragetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Error error = 4;
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.getError = function() {
  return /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.Error} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorage.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageGetRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.SecretForStorageDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storagename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storagetype: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoragename(value);
      break;
    case 3:
      var value = /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (reader.readEnum());
      msg.setStoragetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoragename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoragetype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.setStorageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storageName = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.getStoragename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.setStoragename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional StorageType storageType = 3;
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.getStoragetype = function() {
  return /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.prototype.setStoragetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagelistList: jspb.Message.toObjectList(msg.getStoragelistList(),
    proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry;
      reader.readMessage(value,proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.deserializeBinaryFromReader);
      msg.addStoragelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StorageListEntry storageList = 1;
 * @return {!Array<!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry>}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.prototype.getStoragelistList = function() {
  return /** @type{!Array<!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry, 1));
};


/**
 * @param {!Array<!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry>} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse} returns this
*/
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.prototype.setStoragelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.prototype.addStoragelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListResponse.prototype.clearStoragelistList = function() {
  return this.setStoragelistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagenumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 pageNumber = 1;
 * @return {number}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 pageSize = 2;
 * @return {number}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageListRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.SearchqueryCase = {
  SEARCHQUERY_NOT_SET: 0,
  STORAGEID: 1,
  STORAGENAME: 2,
  STORAGETYPE: 3
};

/**
 * @return {proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.SearchqueryCase}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.getSearchqueryCase = function() {
  return /** @type {proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.SearchqueryCase} */(jspb.Message.computeOneofCase(this, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storagename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storagetype: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest;
  return proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoragename(value);
      break;
    case 3:
      var value = /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (reader.readEnum());
      msg.setStoragetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string storageId = 1;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.getStorageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.setStorageid = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.clearStorageid = function() {
  return jspb.Message.setOneofField(this, 1, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.hasStorageid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string storageName = 2;
 * @return {string}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.getStoragename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.setStoragename = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.clearStoragename = function() {
  return jspb.Message.setOneofField(this, 2, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.hasStoragename = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StorageType storageType = 3;
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.getStoragetype = function() {
  return /** @type {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType} value
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.setStoragetype = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest} returns this
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.clearStoragetype = function() {
  return jspb.Message.setOneofField(this, 3, proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageSearchRequest.prototype.hasStoragetype = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.StorageType = {
  S3: 0,
  SCP: 1,
  FTP: 2,
  LOCAL: 3,
  BOX: 4,
  DROPBOX: 5,
  GCS: 6,
  AZURE: 7,
  SWIFT: 8,
  ODATA: 9,
  HTTP: 10
};

/**
 * @enum {number}
 */
proto.org.apache.airavata.mft.resource.stubs.storage.common.Error = {
  NOT_FOUND: 0,
  NO_PERMISSION: 1,
  LIMIT_OVERFLOWED: 2
};

goog.object.extend(exports, proto.org.apache.airavata.mft.resource.stubs.storage.common);
