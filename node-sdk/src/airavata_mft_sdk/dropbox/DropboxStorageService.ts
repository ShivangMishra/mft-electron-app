/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: dropbox/DropboxStorageService.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./DropboxStorage";
import * as grpc_1 from "@grpc/grpc-js";
export namespace org.apache.airavata.mft.resource.service.dropbox {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedDropboxStorageServiceService {
        static definition = {
            listDropboxStorage: {
                path: "/org.apache.airavata.mft.resource.service.dropbox.DropboxStorageService/listDropboxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse.deserialize(new Uint8Array(bytes))
            },
            getDropboxStorage: {
                path: "/org.apache.airavata.mft.resource.service.dropbox.DropboxStorageService/getDropboxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageGetRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageGetRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage.deserialize(new Uint8Array(bytes))
            },
            createDropboxStorage: {
                path: "/org.apache.airavata.mft.resource.service.dropbox.DropboxStorageService/createDropboxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageCreateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageCreateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage.deserialize(new Uint8Array(bytes))
            },
            updateDropboxStorage: {
                path: "/org.apache.airavata.mft.resource.service.dropbox.DropboxStorageService/updateDropboxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse.deserialize(new Uint8Array(bytes))
            },
            deleteDropboxStorage: {
                path: "/org.apache.airavata.mft.resource.service.dropbox.DropboxStorageService/deleteDropboxStorage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract listDropboxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse>): void;
        abstract getDropboxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageGetRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>): void;
        abstract createDropboxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageCreateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>): void;
        abstract updateDropboxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse>): void;
        abstract deleteDropboxStorage(call: grpc_1.ServerUnaryCall<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse>, callback: grpc_1.sendUnaryData<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse>): void;
    }
    export class DropboxStorageServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedDropboxStorageServiceService.definition, "DropboxStorageService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        listDropboxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageListResponse>): grpc_1.ClientUnaryCall => {
            return super.listDropboxStorage(message, metadata, options, callback);
        };
        getDropboxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageGetRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageGetRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>): grpc_1.ClientUnaryCall => {
            return super.getDropboxStorage(message, metadata, options, callback);
        };
        createDropboxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageCreateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageCreateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage>): grpc_1.ClientUnaryCall => {
            return super.createDropboxStorage(message, metadata, options, callback);
        };
        updateDropboxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateResponse>): grpc_1.ClientUnaryCall => {
            return super.updateDropboxStorage(message, metadata, options, callback);
        };
        deleteDropboxStorage: GrpcUnaryServiceInterface<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteRequest, dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse> = (message: dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse>, callback?: grpc_1.requestCallback<dependency_1.org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteResponse>): grpc_1.ClientUnaryCall => {
            return super.deleteDropboxStorage(message, metadata, options, callback);
        };
    }
}
